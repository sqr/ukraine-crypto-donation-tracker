# Use root/example as user/password credentials
version: '3.1'

services:

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PW}
    volumes:
      - ./datadir:/data/db
    ports:
      - 27017:27017
    networks:
      - zelenski
  
  redis:
    image: redis
    command: redis-server
    ports:
      - 6389:6379
    networks:
      - zelenski

  # frontend

  backend:
   image: backend
   build: ./backend
   ports:
    - 6001:6001
   depends_on:
    - mongo
   labels:
    - "traefik.enable=true"
    - "traefik.http.routers.ukraine-crypto-api.rule=Host(`ukraine-crypto-api.arturobracero.com`)"
    - "traefik.http.routers.ukraine-crypto-api.entrypoints=websecure"
    - "traefik.http.routers.ukraine-crypto-api.tls.certresolver=myresolver"
    - "traefik.http.services.ukraine-crypto-api.loadbalancer.server.port=6001"
    - "traefik.docker.network=traefik"
   networks:
      - traefik
      - zelenski

  worker:
   image: worker
   build:
    context: ./backend
    dockerfile: Dockerfile-worker
   depends_on:
    - mongo
    - backend
   networks:
      - zelenski

  jobs:
   image: jobs
   build:
    context: ./backend
    dockerfile: Dockerfile-jobs
   depends_on:
    - mongo
    - backend
   networks:
      - zelenski

networks:
  zelenski:
    external: true
  traefik:
    external: true